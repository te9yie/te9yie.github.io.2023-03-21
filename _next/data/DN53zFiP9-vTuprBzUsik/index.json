{"pageProps":{"daily":[{"id":"2022-05-25","content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      a: \"a\",\n      pre: \"pre\",\n      code: \"code\",\n      hr: \"hr\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.p, {\n        children: [\"このサイトが更新される時間を朝の 4 時にしようと思って \", _jsx(_components.a, {\n          className: \"internal new\",\n          href: \"GitHub Actions\",\n          children: \"GitHub Actions\"\n        }), \" には schedule trigger を設定しておいた。\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-yaml\",\n          children: \"on:\\n  schedule:\\n    - cron: \\\"0 19 * * *\\\"\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"どうもその時間に動いたみたいなんだけど、\", _jsx(_components.a, {\n          className: \"internal new\",\n          href: \"草画像\",\n          children: \"草画像\"\n        }), \"が今日更新された状態になっていない。多分、\", _jsx(_components.a, {\n          className: \"internal new\",\n          href: \"JavaScript\",\n          children: \"JavaScript\"\n        }), \" で \", _jsx(_components.code, {\n          children: \"new Date()\"\n        }), \" したときに JST でなく UTC で判定されている気がする。タイムゾーンを設定して実行するようにしてみた。これで上手く動くといいんだけど。\"]\n      }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n        children: \"タイトルを付けることが面倒な日々のメモは日付をタイトルにしている。このフォーマットで書かれたページだけ日誌みたいな感じで別管理にしようかなと思った。トップページで直近何日か分くらいが展開されて見えるようになっているとか、日誌ページに列挙されるとか。\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"create_at":"2022-05-25 09:01:53","update_at":"2022-05-25 19:08:55","refLinks":[],"links":["2022-05-24","GitHub Actions の checkout アクション","2022-05-23","Next.js でサイトをつくる"]}],"ids":[{"id":"2022-05-25","create_at":"2022-05-25 09:01:53","update_at":"2022-05-25 19:08:55"},{"id":"2022-05-24","create_at":"2022-05-24 04:40:29","update_at":"2022-05-25 09:01:53"},{"id":"2022-05-23","create_at":"2022-05-23 21:05:21","update_at":"2022-05-25 09:01:53"},{"id":"p5.js in Next.js","create_at":"2022-05-24 22:14:29","update_at":"2022-05-24 22:14:29"},{"id":"Git でファイルの作成日を取得する","create_at":"2022-05-22 13:09:41","update_at":"2022-05-22 13:09:41"},{"id":"ブログを忘れていた","create_at":"2022-05-22 12:37:04","update_at":"2022-05-22 12:44:35"},{"id":"gettimeofday() は廃止予定","create_at":"2022-05-22 12:37:04","update_at":"2022-05-22 12:37:04"},{"id":"Wiki Link をタグ代わりに使う","create_at":"2022-05-22 12:37:04","update_at":"2022-05-22 12:37:04"},{"id":"Next.js でサイトをつくる","create_at":"2022-05-22 12:37:04","update_at":"2022-05-22 12:37:04"},{"id":"GitHub Actions の checkout アクション","create_at":"2022-05-22 12:37:04","update_at":"2022-05-22 12:37:04"}]},"__N_SSG":true}