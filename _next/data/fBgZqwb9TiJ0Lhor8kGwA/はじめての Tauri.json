{"pageProps":{"postData":{"id":"はじめての Tauri","content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      a: \"a\",\n      table: \"table\",\n      thead: \"thead\",\n      tr: \"tr\",\n      th: \"th\",\n      tbody: \"tbody\",\n      td: \"td\",\n      strong: \"strong\",\n      pre: \"pre\",\n      code: \"code\",\n      img: \"img\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.p, {\n        children: [_jsx(_components.a, {\n          className: \"internal new\",\n          href: \"/Tauri\",\n          children: \"Tauri\"\n        }), \" はバックエンドが \", _jsx(_components.a, {\n          className: \"internal new\",\n          href: \"/Rust\",\n          children: \"Rust\"\n        }), \" の \", _jsx(_components.a, {\n          className: \"internal new\",\n          href: \"/Electron\",\n          children: \"Electron\"\n        }), \" みたいなものみたい。\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.a, {\n          href: \"https://tauri.app/\",\n          children: \"https://tauri.app/\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Electron はフロントエンドが \", _jsx(_components.a, {\n          className: \"internal new\",\n          href: \"/Chrome\",\n          children: \"Chrome\"\n        }), \"、バックエンドが \", _jsx(_components.a, {\n          className: \"internal new\",\n          href: \"/Node.js\",\n          children: \"Node.js\"\n        }), \"。Tauri はフロントエンドが OS ネイティブの Web レンダラで、バックエンドが Rust ということらしい。\"]\n      }), \"\\n\", _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              align: \"right\"\n            }), _jsx(_components.th, {\n              children: \"Tauri\"\n            }), _jsx(_components.th, {\n              children: \"Electron\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              align: \"right\",\n              children: _jsx(_components.strong, {\n                children: \"フロントエンド\"\n              })\n            }), _jsx(_components.td, {\n              children: \"OS ネイティブの Web レンダラ\"\n            }), _jsx(_components.td, {\n              children: \"Chrome\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              align: \"right\",\n              children: _jsx(_components.strong, {\n                children: \"バックエンド\"\n              })\n            }), _jsx(_components.td, {\n              children: \"Rust\"\n            }), _jsx(_components.td, {\n              children: \"Node.js\"\n            })]\n          })]\n        })]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"公式サイトのガイドを参考にとりあえず動くものを作ってみる。\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-dos\",\n          children: \"> npx create-tauri-app\\n? What is your app name? hello\\n? What should the window title be? Hello\\n? What UI recipe would you like to add? Vanilla.js (html, css, and js without the bundlers)\\n> cd hello\\n> npm install\\n> npm run tauri dev\\n\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.img, {\n          src: \"/hello-tauri.png\",\n          alt: \"hello\"\n        })\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"create_at":"2022-06-17 09:11:04","update_at":"2022-06-17 09:11:04","refLinks":[],"links":["2022-05-23"]}},"__N_SSG":true}