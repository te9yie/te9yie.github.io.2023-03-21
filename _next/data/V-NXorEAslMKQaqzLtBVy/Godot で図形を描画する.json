{"pageProps":{"postData":{"id":"Godot で図形を描画する","content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      a: \"a\",\n      code: \"code\",\n      br: \"br\",\n      pre: \"pre\",\n      h2: \"h2\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.p, {\n        children: [_jsx(_components.a, {\n          className: \"internal new\",\n          href: \"/Godot\",\n          children: \"Godot\"\n        }), \" で矩形や球を描画したいと思った。メッシュを作ったりして色々面倒なのかなと思ったら \", _jsx(_components.code, {\n          children: \"CanvasItem\"\n        }), \" に \", _jsx(_components.code, {\n          children: \"draw_*\"\n        }), \" 系のメソッドがあった。\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.a, {\n          href: \"https://docs.godotengine.org/ja/stable/tutorials/2d/custom_drawing_in_2d.html\",\n          children: \"https://docs.godotengine.org/ja/stable/tutorials/2d/custom_drawing_in_2d.html\"\n        }), _jsx(_components.br, {}), \"\\n\", _jsx(_components.a, {\n          href: \"https://docs.godotengine.org/ja/stable/classes/class_canvasitem.html\",\n          children: \"https://docs.godotengine.org/ja/stable/classes/class_canvasitem.html\"\n        })]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"とりあえず \", _jsx(_components.code, {\n          children: \"Node2D\"\n        }), \" を継承して描いてみる。\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-godot\",\n          children: \"extends Node2D\\n\\nfunc _draw():\\n    draw_rect(Rect2(0, 0, 20, 20), Color.red)\\n\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"これで左上に赤い四角が描ける。\"\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"文字列の描画\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"フォントを設定しての文字列描画もできる。\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-godot\",\n          children: \"extends Node2D\\n\\nconst font_data: DynamicFontData = preload(\\\"res://xxxx.ttf\\\")\\n\\nvar font: DynamicFont = DynamicFont.new()\\n\\nfunc _ready() -> void:\\n\\tfont.font_data = font_data\\n\\tfont.size = 26\\n\\tfont.outline_size = 1\\n\\tfont.outline_color = Color.white\\n\\nfunc _draw() -> void:\\n\\tdraw_string(font, Vector2(0, 0), \\\"Hello, World!\\\", Color.black)\\n\"\n        })\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"create_at":"2022-06-05 21:57:34","update_at":"2022-06-06 08:24:01","refLinks":[],"links":["2022-06-01","2022-06-05","Godot で UI をつくる","Godot で Y 座標基準で Z ソートする","Godot でグローバルな定数や関数を定義する","Godot でピクセルパーフェクトにする"]}},"__N_SSG":true}