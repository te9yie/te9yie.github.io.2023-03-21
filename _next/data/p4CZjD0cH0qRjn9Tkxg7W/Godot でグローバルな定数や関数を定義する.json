{"pageProps":{"postData":{"id":"Godot でグローバルな定数や関数を定義する","content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      a: \"a\",\n      code: \"code\",\n      pre: \"pre\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.p, {\n        children: [\"#\", _jsx(_components.a, {\n          className: \"internal new\",\n          href: \"/Godot\",\n          children: \"Godot\"\n        })]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.code, {\n          children: \"const\"\n        }), \" や \", _jsx(_components.code, {\n          children: \"static\"\n        }), \" を使えばできた。\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-godot\",\n          children: \"# global.gd\\nconst block_size: int = 10\\n\\nstatic func draw_block(x: int, y:int) -> void:\\n    ...\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"使う側では \", _jsx(_components.code, {\n          children: \"preload\"\n        }), \" を使って読み込む。\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-godot\",\n          children: \"# game.gd\\nconst Global = preload(\\\"res://global.gd\\\")\\n\\nfunc _process(delta: float) -> void:\\n    Global.draw_block(2 * Global.block_size, 3 * Global.block_size)\\n\"\n        })\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"create_at":"2022-06-05 23:48:04","update_at":"2022-06-05 23:48:04","refLinks":[],"links":["2022-06-01","2022-06-05","Godot で UI をつくる","Godot で Y 座標基準で Z ソートする","Godot でピクセルパーフェクトにする","Godot で図形を描画する"]}},"__N_SSG":true}