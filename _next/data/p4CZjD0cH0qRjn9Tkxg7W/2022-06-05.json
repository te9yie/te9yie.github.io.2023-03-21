{"pageProps":{"postData":{"id":"2022-06-05","content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      a: \"a\",\n      code: \"code\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.p, {\n        children: [_jsx(_components.a, {\n          className: \"internal new\",\n          href: \"/Godot\",\n          children: \"Godot\"\n        }), \" でグリッドで移動するものを作っている。伝統的な\", _jsx(_components.a, {\n          className: \"internal new\",\n          href: \"/ローグライク\",\n          children: \"ローグライク\"\n        }), \"のようなやつ――最近ローグライクって言葉が何を指し示しているのかがよく分からない。\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.a, {\n          className: \"internal new\",\n          href: \"/コリジョン判定\",\n          children: \"コリジョン判定\"\n        }), \"や\", _jsx(_components.a, {\n          className: \"internal new\",\n          href: \"/経路探索\",\n          children: \"経路探索\"\n        }), \"などが楽かなと思ってグリッドベースにしてみたんだけど、タイルにコリジョン設定して\", _jsx(_components.a, {\n          className: \"internal new\",\n          href: \"/物理エンジン\",\n          children: \"物理エンジン\"\n        }), \"で判定するみたいな機能が標準っぽくて、こういう\", _jsx(_components.a, {\n          className: \"internal new\",\n          href: \"/ゲームエンジン\",\n          children: \"ゲームエンジン\"\n        }), \"を使うと逆に大変なのかもしれない。逆に大変というか、どうやるのか調べたり用意されていないことをしようとするのに時間がかかる。単に通れる通れないの 2 値の 2 次元配列があって参照できるだけでいいんだけどな。\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"スプライトの前後関係もテクスチャの下基準で Z ソートしたいんだけどタイルマップと普通のスプライトが関係したときにどうするのかとか、何をどう設定すればいいのかが分からない。\", _jsx(_components.a, {\n          className: \"internal new\",\n          href: \"/アルゴリズム\",\n          children: \"アルゴリズム\"\n        }), \"は分かるし作れるのにゲームエンジンの使い方は分からないので、じれったい。自分で作ったほうが早い、みたいな気持ちになる――トータルで見たら絶対早くはないのに。\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"見つけた。\", _jsx(_components.code, {\n          children: \"YSort\"\n        }), \" ノードというものを使うみたい。\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.a, {\n          className: \"internal new\",\n          href: \"/Godot で Y 座標基準で Z ソートする\",\n          children: \"Godot で Y 座標基準で Z ソートする\"\n        })\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"create_at":"2022-06-05 10:34:50","update_at":"2022-06-05 21:58:10","refLinks":[],"links":["2022-06-01","Godot で UI をつくる","Godot でグローバルな定数や関数を定義する","Godot でピクセルパーフェクトにする","Godot で図形を描画する","タイルマップ"]}},"__N_SSG":true}