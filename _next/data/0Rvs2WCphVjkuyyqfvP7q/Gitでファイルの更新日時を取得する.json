{"pageProps":{"postData":{"id":"Gitでファイルの更新日時を取得する","content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git log -1 --pretty=\\\"%ad\\\" -- <file>\")), mdx(\"p\", null, \"\\u65E5\\u6642\\u306E\\u30D5\\u30A9\\u30FC\\u30DE\\u30C3\\u30C8\\u3092\\u6307\\u5B9A\\u3059\\u308B\\u3053\\u3068\\u3082\\u3067\\u304D\\u308B\\u3002\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git log -1 --pretty=\\\"%ad\\\" --date=format:\\\"%Y-%m-%d %H:%M:%S\\\" -- <file>\")), mdx(\"p\", null, \"ref \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://git-scm.com/book/ja/v2/Git-%E3%81%AE%E5%9F%BA%E6%9C%AC-%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E5%B1%A5%E6%AD%B4%E3%81%AE%E9%96%B2%E8%A6%A7\"\n  }, \"Git - \\u30B3\\u30DF\\u30C3\\u30C8\\u5C65\\u6B74\\u306E\\u95B2\\u89A7\")), mdx(\"hr\", null), mdx(\"p\", null, \"\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u66F4\\u65B0\\u65E5\\u6642\\u3068\\u3057\\u3066\", mdx(\"a\", {\n    parentName: \"p\",\n    \"className\": \"internal new\",\n    \"href\": \"Git\"\n  }, \"Git\"), \"\\u3067\\u30B3\\u30DF\\u30C3\\u30C8\\u3057\\u305F\\u6642\\u9593\\u304C\\u4F7F\\u3048\\u305F\\u3089\\u3044\\u3044\\u306A\\u3068\\u601D\\u3063\\u305F\\u3002\"));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p><code>git log -1 --pretty=&quot;%ad&quot; -- &lt;file&gt;</code></p><p>日時のフォーマットを指定することもできる。</p><p><code>git log -1 --pretty=&quot;%ad&quot; --date=format:&quot;%Y-%m-%d %H:%M:%S&quot; -- &lt;file&gt;</code></p><p>ref <a href=\"https://git-scm.com/book/ja/v2/Git-%E3%81%AE%E5%9F%BA%E6%9C%AC-%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E5%B1%A5%E6%AD%B4%E3%81%AE%E9%96%B2%E8%A6%A7\">Git - コミット履歴の閲覧</a></p><hr/><p>ファイルの更新日時として<a href=\"Git\">Git</a>でコミットした時間が使えたらいいなと思った。</p>","scope":{}},"lastUpdate":"2021-04-03 14:48:38","refLinks":[],"links":["GitHub Actionsのcheckoutアクション","記事のメタ情報を収集する"]}},"__N_SSG":true}