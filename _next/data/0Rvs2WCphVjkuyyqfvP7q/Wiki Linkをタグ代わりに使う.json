{"pageProps":{"postData":{"id":"Wiki Linkをタグ代わりに使う","content":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u8A18\\u4E8B\\u306E\\u30E1\\u30BF\\u60C5\\u5831\\u3068\\u3057\\u3066\\u30AB\\u30C6\\u30B4\\u30EA\\u5206\\u3051\\u3068\\u304B\\u30BF\\u30B0\\u4ED8\\u3051\\u3068\\u304B\\u3059\\u308B\\u3053\\u3068\\u304C\\u3042\\u308B\\u3068\\u601D\\u3046\\u3093\\u3060\\u3051\\u3069\\u3001\\u9762\\u5012\\u3060\\u306A\\u3068\\u601D\\u3063\\u3066\\u3044\\u305F\\u3002\\u6587\\u7AE0\\u306E\\u4E2D\\u306E\\u30AD\\u30FC\\u30EF\\u30FC\\u30C9\\u304C\\u305D\\u308C\\u3063\\u307D\\u304F\\u6A5F\\u80FD\\u3059\\u308C\\u3070\\u3088\\u3044\\u3068\\u601D\\u3044\", mdx(\"a\", {\n    parentName: \"p\",\n    \"className\": \"internal new\",\n    \"href\": \"Wiki Link\"\n  }, \"Wiki Link\"), \"\\u3092\\u4F7F\\u3046\\u3053\\u3068\\u306B\\u3057\\u305F\\u3002\\u30AD\\u30FC\\u30EF\\u30FC\\u30C9\\u3063\\u307D\\u3044\\u3082\\u306E\\u3092\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[\"), \"\\u3068\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"]]\"), \"\\u3067\\u56F2\\u3046\\u3060\\u3051\\u3002\\u3042\\u3068\\u306F\\u540C\\u3058\\u30AD\\u30FC\\u30EF\\u30FC\\u30C9\\u3092\\u4F7F\\u3063\\u3066\\u3044\\u308B\\u8A18\\u4E8B\\u304C\\u30EA\\u30F3\\u30AF\\u3055\\u308C\\u3066\\u3044\\u304F\\u307F\\u305F\\u3044\\u306A\\u3002\"), mdx(\"p\", null, \"\\u3053\\u306E\\u30B5\\u30A4\\u30C8\\u3067\\u306F\", mdx(\"a\", {\n    parentName: \"p\",\n    \"className\": \"internal new\",\n    \"href\": \"Wiki Link\"\n  }, \"Wiki Link\"), \"\\u3092\\u5143\\u306B\\u53C2\\u7167\\u5143\\u30EA\\u30F3\\u30AF\\u306A\\u3069\\u306B\\u5BFE\\u5FDC\\u3057\\u305F\\u3002\\u5168\\u8A18\\u4E8B\\u306E\\u30EA\\u30F3\\u30AF\\u60C5\\u5831\\u3092\\u89E3\\u6790\\u3057\\u3066\\u304A\\u3044\\u3066\\u3001\\u305D\\u308C\\u3092\", mdx(\"a\", {\n    parentName: \"p\",\n    \"className\": \"internal new\",\n    \"href\": \"SSG\"\n  }, \"SSG\"), \"\\u6642\\u306B\\u4F7F\\u3046\\u3053\\u3068\\u3067\\u5B9F\\u73FE\\u3067\\u304D\\u305F\\u3002\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/te9yie/te9yie.github.io/blob/main/gen-links.js\"\n  }, \"https://github.com/te9yie/te9yie.github.io/blob/main/gen-links.js\")));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p>記事のメタ情報としてカテゴリ分けとかタグ付けとかすることがあると思うんだけど、面倒だなと思っていた。文章の中のキーワードがそれっぽく機能すればよいと思い<a href=\"Wiki Link\">Wiki Link</a>を使うことにした。キーワードっぽいものを<code>[[</code>と<code>]]</code>で囲うだけ。あとは同じキーワードを使っている記事がリンクされていくみたいな。</p><p>このサイトでは<a href=\"Wiki Link\">Wiki Link</a>を元に参照元リンクなどに対応した。全記事のリンク情報を解析しておいて、それを<a href=\"SSG\">SSG</a>時に使うことで実現できた。</p><p><a href=\"https://github.com/te9yie/te9yie.github.io/blob/main/gen-links.js\">https://github.com/te9yie/te9yie.github.io/blob/main/gen-links.js</a></p>","scope":{}},"lastUpdate":"2021-04-04 15:40:43","refLinks":["Next.jsでサイトをつくる"],"links":["記事のメタ情報を収集する","JavaScript","Next.js","Markdown","MDX","Wiki"]}},"__N_SSG":true}