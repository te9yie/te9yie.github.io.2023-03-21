{"pageProps":{"postData":{"id":"Git でファイルの作成日を取得する","content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      pre: \"pre\",\n      code: \"code\",\n      p: \"p\",\n      a: \"a\",\n      br: \"br\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-bash\",\n          children: \"$ git log --format=\\\"%ad\\\" -- <file> | tail -1\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.a, {\n          className: \"internal new\",\n          href: \"Git\",\n          children: \"Git\"\n        }), \" でファイル作成日を取りたいと思った。\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n          children: \"git log -1 --reverse\"\n        }), \" で取れるかと思いきや、\", _jsx(_components.code, {\n          children: \"--reverse\"\n        }), \" は出力に対してかかるだけで意味がなかった。\", _jsx(_components.br, {}), \"\\n\", \"結局全部出して \", _jsx(_components.code, {\n          children: \"tail\"\n        }), \" で最後を取るしかないっぽい。\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"create_at":"2022-05-22 13:09:41","update_at":"2022-05-22 13:09:41","refLinks":[],"links":["2022-05-23","Git でファイルの更新日時を取得する","GitHub Actions の checkout アクション","記事のメタ情報を収集する"]}},"__N_SSG":true}